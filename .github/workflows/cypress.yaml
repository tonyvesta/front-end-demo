name: Cypress tests
on:
  pull_request:    

jobs:
  cypress-run:
    name: cypress
    runs-on: ubuntu-latest
    strategy:
        # when one test fails, DO NOT cancel the other
        # containers, because this will kill Cypress processes
        # leaving the Dashboard hanging ...
        # https://github.com/cypress-io/github-action/issues/48
        fail-fast: false
        matrix:
          # run 3 copies of the current job in parallel
          #containers: [1, 2, 3]
          containers: [1]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: npm install
        run: npm install 
        
      - name: Cypress run
        if:  ${{ github.ref != 'refs/heads/main' }}
        uses: cypress-io/github-action@v2
        with:
          record: true
          #start: npm run start:ci
          # quote the url to be safe against YML parsing surprises
          #wait-on: 'http://localhost:8888'
          #command: npx cypress run
          command: npm run cypress:run
          parallel: true
          group: 'Actions example'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}

      - name: Run Lighthouse
        if:  ${{ github.ref != 'refs/heads/main' }}
        uses: foo-software/lighthouse-check-action@master
        id: lighthouseCheck
        with:
          urls: 'https://example.cypress.io/todo'
          # ... all your other inputs
      - name: Handle Lighthouse Check results
        uses: foo-software/lighthouse-check-status-action@master
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          minAccessibilityScore: "70"
          minBestPracticesScore: "0"
          minPerformanceScore: "40"
          minProgressiveWebAppScore: "0"
          minSeoScore: "50"

#branch
      - name: Allure Generate Report
        uses: simple-elf/allure-report-action@master
        continue-on-error: true
        #id: allure-report
        with:
          allure_results:  allure-results
          gh_pages: gh-pages
          allure_report: allure-report 

      - name: vars for branch
        if:  ${{ github.ref != 'refs/heads/main' }}  
        run:  echo "GITHUB_BRANCH=${GITHUB_HEAD_REF}" >> $GITHUB_ENV    

      - name: branch ${{ env.GITHUB_BRANCH }}
        run: echo "the branch is ${{ env.GITHUB_BRANCH }}"

      - name: Deploy report to branch directory in Github Pages
        if:  ${{ github.ref != 'refs/heads/main' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          destination_dir: ${{ env.GITHUB_BRANCH }}/${{ env.GITHUB_BRANCH }}

      - name: Post the link to the report
        if: github.ref != 'refs/heads/main'
        uses: Sibz/github-status-action@v1
        with: 
            authToken: ${{secrets.GITHUB_TOKEN}}
            context: 'Allure Report'
            state: 'success'
            sha: ${{ github.event.pull_request.head.sha }}
            target_url: https://tonyvesta.github.io/front-end-demo/${{ env.GITHUB_BRANCH }}/allure-report
            #target_url: https://waterscorporation.github.io/wcc-auditlog/${{ env.GITHUB_BRANCH }}/${{ github.run_number }}
            
